name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, macos-12] # macos-latest = ARM, macos-12 = Intel
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-12
            target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          components: rustfmt, clippy
      
      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings
  
  test:
    name: Test
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, macos-12] # macos-latest = ARM, macos-12 = Intel
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-12
            target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features